---
- name: Set Vars
  set_fact:
    tpi_host: "10.10.30.76"
    tpi_user: "root"
    node_id: "{{ (hostvars[item]['inventory_hostname'] | regex_search('(\\d+)$') | last) | replace('0', '') }}"
    create_user_script: "https://raw.githubusercontent.com/StoneMonarch/Homelab-Ansible/refs/heads/master/create-user.sh"
    configure_network_script: "https://raw.githubusercontent.com/StoneMonarch/Homelab-Ansible/refs/heads/master/configure-network.sh"

- name: Flash Node with img using TPI
  command:
    cmd: "tpi --host {{ tpi_host }} --user {{ tpi_user }} --password {{ tpi_password }} flash --image-path {{ image_path }} --node {{ node_id }} --json"
  register: flash_result
  failed_when: flash_result.rc != 0

- name: Power on Node
  command:
    cmd: "tpi power --host {{ tpi_host }} --user {{ tpi_user }} --password {{ tpi_password }} --node {{ node_id }} on"
  register: power_result
  failed_when: power_result.rc != 0

- name: Wait for Node to boot
  pause:
    seconds: 60

# Login sequence with error checking
- name: Set up new user credentials
  block:
    - name: Enter default username
      command:
        cmd: "tpi uart --node {{ node_id }} --host {{ tpi_host }} --user {{ tpi_user }} --password {{ tpi_password }} set --cmd 'ubuntu'"
      register: username_result
      failed_when: username_result.rc != 0

    - name: Wait for password prompt
      pause:
        seconds: 5

    - name: Enter default password
      command:
        cmd: "tpi uart --node {{ node_id }} --host {{ tpi_host }} --user {{ tpi_user }} --password {{ tpi_password }} set --cmd 'ubuntu'"
      register: password_result
      failed_when: password_result.rc != 0

    - name: Wait for password reset prompt
      pause:
        seconds: 10

    - name: Confirm current password
      command:
        cmd: "tpi uart --node {{ node_id }} --host {{ tpi_host }} --user {{ tpi_user }} --password {{ tpi_password }} set --cmd 'ubuntu'"
      register: confirm_result
      failed_when: confirm_result.rc != 0

    - name: Enter new password
      command:
        cmd: "tpi uart --node {{ node_id }} --host {{ tpi_host }} --user {{ tpi_user }} --password {{ tpi_password }} set --cmd '{{ new_password }}'"
      register: new_pass_result
      failed_when: new_pass_result.rc != 0

    - name: Confirm new password
      command:
        cmd: "tpi uart --node {{ node_id }} --host {{ tpi_host }} --user {{ tpi_user }} --password {{ tpi_password }} set --cmd '{{ new_password }}'"
      register: confirm_new_result
      failed_when: confirm_new_result.rc != 0

- name: Wait for prompt to reset
  pause:
    seconds: 10

- name: Create ansible user
  command:
    cmd: >
      tpi uart --node {{ node_id }} --host {{ tpi_host }} --user {{ tpi_user }} --password {{ tpi_password }} set --cmd
      "curl {{ create_user_script }} > create-user.sh &&
      chmod +x create-user.sh &&
      sudo ./create-user.sh ansible '{{ user_password }}' '{{ ssh_key }}' &&
      rm create-user.sh"
  register: user_creation
  failed_when: user_creation.rc != 0

- name: Wait for prompt to reset
  pause:
    seconds: 10

- name: Configure network
  command:
    cmd: >
      tpi uart --node {{ node_id }} --host {{ tpi_host }} --user {{ tpi_user }} --password {{ tpi_password }} set --cmd 
      "curl {{ configure_network_script }} > configure-network.sh &&
      chmod +x configure-network.sh && 
      sudo ./configure-network.sh {{ hostvars[item]['ansible_host'] }} 10.10.40.{{ hostvars[item]['ansible_host'].split('.')[-1] }} 10.10.30.1 10.10.30.1 && 
      rm configure-network.sh"
  register: network_configuration
  failed_when: network_configuration.rc != 0